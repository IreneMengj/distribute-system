// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service2.proto

package Calendar.ds.service2;

/**
 * Protobuf type {@code service2.eventIdList}
 */
public final class eventIdList extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:service2.eventIdList)
    eventIdListOrBuilder {
private static final long serialVersionUID = 0L;
  // Use eventIdList.newBuilder() to construct.
  private eventIdList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private eventIdList() {
    eventIds_ = emptyIntList();
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new eventIdList();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return Service2Impl.internal_static_service2_eventIdList_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return Service2Impl.internal_static_service2_eventIdList_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            eventIdList.class, Builder.class);
  }

  public static final int EVENTIDS_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private com.google.protobuf.Internal.IntList eventIds_;
  /**
   * <code>repeated int32 eventIds = 1;</code>
   * @return A list containing the eventIds.
   */
  @Override
  public java.util.List<Integer>
      getEventIdsList() {
    return eventIds_;
  }
  /**
   * <code>repeated int32 eventIds = 1;</code>
   * @return The count of eventIds.
   */
  public int getEventIdsCount() {
    return eventIds_.size();
  }
  /**
   * <code>repeated int32 eventIds = 1;</code>
   * @param index The index of the element to return.
   * @return The eventIds at the given index.
   */
  public int getEventIds(int index) {
    return eventIds_.getInt(index);
  }
  private int eventIdsMemoizedSerializedSize = -1;

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (getEventIdsList().size() > 0) {
      output.writeUInt32NoTag(10);
      output.writeUInt32NoTag(eventIdsMemoizedSerializedSize);
    }
    for (int i = 0; i < eventIds_.size(); i++) {
      output.writeInt32NoTag(eventIds_.getInt(i));
    }
    getUnknownFields().writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      for (int i = 0; i < eventIds_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(eventIds_.getInt(i));
      }
      size += dataSize;
      if (!getEventIdsList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      eventIdsMemoizedSerializedSize = dataSize;
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof eventIdList)) {
      return super.equals(obj);
    }
    eventIdList other = (eventIdList) obj;

    if (!getEventIdsList()
        .equals(other.getEventIdsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getEventIdsCount() > 0) {
      hash = (37 * hash) + EVENTIDS_FIELD_NUMBER;
      hash = (53 * hash) + getEventIdsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static eventIdList parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static eventIdList parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static eventIdList parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static eventIdList parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static eventIdList parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static eventIdList parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static eventIdList parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static eventIdList parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static eventIdList parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static eventIdList parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static eventIdList parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static eventIdList parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(eventIdList prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code service2.eventIdList}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:service2.eventIdList)
      eventIdListOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Service2Impl.internal_static_service2_eventIdList_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Service2Impl.internal_static_service2_eventIdList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              eventIdList.class, Builder.class);
    }

    // Construct using Calendar.ds.service2.eventIdList.newBuilder()
    private Builder() {

    }

    private Builder(
        BuilderParent parent) {
      super(parent);

    }
    @Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      eventIds_ = emptyIntList();
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return Service2Impl.internal_static_service2_eventIdList_descriptor;
    }

    @Override
    public eventIdList getDefaultInstanceForType() {
      return eventIdList.getDefaultInstance();
    }

    @Override
    public eventIdList build() {
      eventIdList result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public eventIdList buildPartial() {
      eventIdList result = new eventIdList(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(eventIdList result) {
      if (((bitField0_ & 0x00000001) != 0)) {
        eventIds_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.eventIds_ = eventIds_;
    }

    private void buildPartial0(eventIdList result) {
      int from_bitField0_ = bitField0_;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof eventIdList) {
        return mergeFrom((eventIdList)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(eventIdList other) {
      if (other == eventIdList.getDefaultInstance()) return this;
      if (!other.eventIds_.isEmpty()) {
        if (eventIds_.isEmpty()) {
          eventIds_ = other.eventIds_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureEventIdsIsMutable();
          eventIds_.addAll(other.eventIds_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int v = input.readInt32();
              ensureEventIdsIsMutable();
              eventIds_.addInt(v);
              break;
            } // case 8
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              ensureEventIdsIsMutable();
              while (input.getBytesUntilLimit() > 0) {
                eventIds_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            } // case 10
            default: {
//              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
//                done = true; // was an endgroup tag
//              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.Internal.IntList eventIds_ = emptyIntList();
    private void ensureEventIdsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        eventIds_ = mutableCopy(eventIds_);
        bitField0_ |= 0x00000001;
      }
    }
    /**
     * <code>repeated int32 eventIds = 1;</code>
     * @return A list containing the eventIds.
     */
    public java.util.List<Integer>
        getEventIdsList() {
      return ((bitField0_ & 0x00000001) != 0) ?
               java.util.Collections.unmodifiableList(eventIds_) : eventIds_;
    }
    /**
     * <code>repeated int32 eventIds = 1;</code>
     * @return The count of eventIds.
     */
    public int getEventIdsCount() {
      return eventIds_.size();
    }
    /**
     * <code>repeated int32 eventIds = 1;</code>
     * @param index The index of the element to return.
     * @return The eventIds at the given index.
     */
    public int getEventIds(int index) {
      return eventIds_.getInt(index);
    }
    /**
     * <code>repeated int32 eventIds = 1;</code>
     * @param index The index to set the value at.
     * @param value The eventIds to set.
     * @return This builder for chaining.
     */
    public Builder setEventIds(
        int index, int value) {
      
      ensureEventIdsIsMutable();
      eventIds_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 eventIds = 1;</code>
     * @param value The eventIds to add.
     * @return This builder for chaining.
     */
    public Builder addEventIds(int value) {
      
      ensureEventIdsIsMutable();
      eventIds_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 eventIds = 1;</code>
     * @param values The eventIds to add.
     * @return This builder for chaining.
     */
    public Builder addAllEventIds(
        Iterable<? extends Integer> values) {
      ensureEventIdsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, eventIds_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 eventIds = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearEventIds() {
      eventIds_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:service2.eventIdList)
  }

  // @@protoc_insertion_point(class_scope:service2.eventIdList)
  private static final eventIdList DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new eventIdList();
  }

  public static eventIdList getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<eventIdList>
      PARSER = new com.google.protobuf.AbstractParser<eventIdList>() {
    @Override
    public eventIdList parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<eventIdList> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<eventIdList> getParserForType() {
    return PARSER;
  }

  @Override
  public eventIdList getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

