// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service2.proto

package Calendar.ds.service2;

/**
 * Protobuf type {@code service2.AppointmentRequest}
 */
public final class AppointmentRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:service2.AppointmentRequest)
    AppointmentRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use AppointmentRequest.newBuilder() to construct.
  private AppointmentRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private AppointmentRequest() {
    appointments_ = java.util.Collections.emptyList();
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new AppointmentRequest();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return Service2Impl.internal_static_service2_AppointmentRequest_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return Service2Impl.internal_static_service2_AppointmentRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            AppointmentRequest.class, Builder.class);
  }

  public static final int APPOINTMENTS_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<Appointment> appointments_;
  /**
   * <code>repeated .service2.Appointment appointments = 1;</code>
   */
  @Override
  public java.util.List<Appointment> getAppointmentsList() {
    return appointments_;
  }
  /**
   * <code>repeated .service2.Appointment appointments = 1;</code>
   */
  @Override
  public java.util.List<? extends AppointmentOrBuilder>
      getAppointmentsOrBuilderList() {
    return appointments_;
  }
  /**
   * <code>repeated .service2.Appointment appointments = 1;</code>
   */
  @Override
  public int getAppointmentsCount() {
    return appointments_.size();
  }
  /**
   * <code>repeated .service2.Appointment appointments = 1;</code>
   */
  @Override
  public Appointment getAppointments(int index) {
    return appointments_.get(index);
  }
  /**
   * <code>repeated .service2.Appointment appointments = 1;</code>
   */
  @Override
  public AppointmentOrBuilder getAppointmentsOrBuilder(
      int index) {
    return appointments_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < appointments_.size(); i++) {
      output.writeMessage(1, appointments_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < appointments_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, appointments_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof AppointmentRequest)) {
      return super.equals(obj);
    }
    AppointmentRequest other = (AppointmentRequest) obj;

    if (!getAppointmentsList()
        .equals(other.getAppointmentsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getAppointmentsCount() > 0) {
      hash = (37 * hash) + APPOINTMENTS_FIELD_NUMBER;
      hash = (53 * hash) + getAppointmentsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static AppointmentRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static AppointmentRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static AppointmentRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static AppointmentRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static AppointmentRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static AppointmentRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static AppointmentRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static AppointmentRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static AppointmentRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static AppointmentRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static AppointmentRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static AppointmentRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(AppointmentRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code service2.AppointmentRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:service2.AppointmentRequest)
      AppointmentRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Service2Impl.internal_static_service2_AppointmentRequest_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Service2Impl.internal_static_service2_AppointmentRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              AppointmentRequest.class, Builder.class);
    }

    // Construct using Calendar.ds.service2.AppointmentRequest.newBuilder()
    private Builder() {

    }

    private Builder(
        BuilderParent parent) {
      super(parent);

    }
    @Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (appointmentsBuilder_ == null) {
        appointments_ = java.util.Collections.emptyList();
      } else {
        appointments_ = null;
        appointmentsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return Service2Impl.internal_static_service2_AppointmentRequest_descriptor;
    }

    @Override
    public AppointmentRequest getDefaultInstanceForType() {
      return AppointmentRequest.getDefaultInstance();
    }

    @Override
    public AppointmentRequest build() {
      AppointmentRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public AppointmentRequest buildPartial() {
      AppointmentRequest result = new AppointmentRequest(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(AppointmentRequest result) {
      if (appointmentsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          appointments_ = java.util.Collections.unmodifiableList(appointments_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.appointments_ = appointments_;
      } else {
        result.appointments_ = appointmentsBuilder_.build();
      }
    }

    private void buildPartial0(AppointmentRequest result) {
      int from_bitField0_ = bitField0_;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof AppointmentRequest) {
        return mergeFrom((AppointmentRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(AppointmentRequest other) {
      if (other == AppointmentRequest.getDefaultInstance()) return this;
      if (appointmentsBuilder_ == null) {
        if (!other.appointments_.isEmpty()) {
          if (appointments_.isEmpty()) {
            appointments_ = other.appointments_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureAppointmentsIsMutable();
            appointments_.addAll(other.appointments_);
          }
          onChanged();
        }
      } else {
        if (!other.appointments_.isEmpty()) {
          if (appointmentsBuilder_.isEmpty()) {
            appointmentsBuilder_.dispose();
            appointmentsBuilder_ = null;
            appointments_ = other.appointments_;
            bitField0_ = (bitField0_ & ~0x00000001);
            appointmentsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getAppointmentsFieldBuilder() : null;
          } else {
            appointmentsBuilder_.addAllMessages(other.appointments_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              Appointment m =
                  input.readMessage(
                      Appointment.parser(),
                      extensionRegistry);
              if (appointmentsBuilder_ == null) {
                ensureAppointmentsIsMutable();
                appointments_.add(m);
              } else {
                appointmentsBuilder_.addMessage(m);
              }
              break;
            } // case 10
            default: {
//              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
//                done = true; // was an endgroup tag
//              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<Appointment> appointments_ =
      java.util.Collections.emptyList();
    private void ensureAppointmentsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        appointments_ = new java.util.ArrayList<Appointment>(appointments_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        Appointment, Appointment.Builder, AppointmentOrBuilder> appointmentsBuilder_;

    /**
     * <code>repeated .service2.Appointment appointments = 1;</code>
     */
    public java.util.List<Appointment> getAppointmentsList() {
      if (appointmentsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(appointments_);
      } else {
        return appointmentsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .service2.Appointment appointments = 1;</code>
     */
    public int getAppointmentsCount() {
      if (appointmentsBuilder_ == null) {
        return appointments_.size();
      } else {
        return appointmentsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .service2.Appointment appointments = 1;</code>
     */
    public Appointment getAppointments(int index) {
      if (appointmentsBuilder_ == null) {
        return appointments_.get(index);
      } else {
        return appointmentsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .service2.Appointment appointments = 1;</code>
     */
    public Builder setAppointments(
        int index, Appointment value) {
      if (appointmentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAppointmentsIsMutable();
        appointments_.set(index, value);
        onChanged();
      } else {
        appointmentsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .service2.Appointment appointments = 1;</code>
     */
    public Builder setAppointments(
        int index, Appointment.Builder builderForValue) {
      if (appointmentsBuilder_ == null) {
        ensureAppointmentsIsMutable();
        appointments_.set(index, builderForValue.build());
        onChanged();
      } else {
        appointmentsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .service2.Appointment appointments = 1;</code>
     */
    public Builder addAppointments(Appointment value) {
      if (appointmentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAppointmentsIsMutable();
        appointments_.add(value);
        onChanged();
      } else {
        appointmentsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .service2.Appointment appointments = 1;</code>
     */
    public Builder addAppointments(
        int index, Appointment value) {
      if (appointmentsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAppointmentsIsMutable();
        appointments_.add(index, value);
        onChanged();
      } else {
        appointmentsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .service2.Appointment appointments = 1;</code>
     */
    public Builder addAppointments(
        Appointment.Builder builderForValue) {
      if (appointmentsBuilder_ == null) {
        ensureAppointmentsIsMutable();
        appointments_.add(builderForValue.build());
        onChanged();
      } else {
        appointmentsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .service2.Appointment appointments = 1;</code>
     */
    public Builder addAppointments(
        int index, Appointment.Builder builderForValue) {
      if (appointmentsBuilder_ == null) {
        ensureAppointmentsIsMutable();
        appointments_.add(index, builderForValue.build());
        onChanged();
      } else {
        appointmentsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .service2.Appointment appointments = 1;</code>
     */
    public Builder addAllAppointments(
        Iterable<? extends Appointment> values) {
      if (appointmentsBuilder_ == null) {
        ensureAppointmentsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, appointments_);
        onChanged();
      } else {
        appointmentsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .service2.Appointment appointments = 1;</code>
     */
    public Builder clearAppointments() {
      if (appointmentsBuilder_ == null) {
        appointments_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        appointmentsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .service2.Appointment appointments = 1;</code>
     */
    public Builder removeAppointments(int index) {
      if (appointmentsBuilder_ == null) {
        ensureAppointmentsIsMutable();
        appointments_.remove(index);
        onChanged();
      } else {
        appointmentsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .service2.Appointment appointments = 1;</code>
     */
    public Appointment.Builder getAppointmentsBuilder(
        int index) {
      return getAppointmentsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .service2.Appointment appointments = 1;</code>
     */
    public AppointmentOrBuilder getAppointmentsOrBuilder(
        int index) {
      if (appointmentsBuilder_ == null) {
        return appointments_.get(index);  } else {
        return appointmentsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .service2.Appointment appointments = 1;</code>
     */
    public java.util.List<? extends AppointmentOrBuilder>
         getAppointmentsOrBuilderList() {
      if (appointmentsBuilder_ != null) {
        return appointmentsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(appointments_);
      }
    }
    /**
     * <code>repeated .service2.Appointment appointments = 1;</code>
     */
    public Appointment.Builder addAppointmentsBuilder() {
      return getAppointmentsFieldBuilder().addBuilder(
          Appointment.getDefaultInstance());
    }
    /**
     * <code>repeated .service2.Appointment appointments = 1;</code>
     */
    public Appointment.Builder addAppointmentsBuilder(
        int index) {
      return getAppointmentsFieldBuilder().addBuilder(
          index, Appointment.getDefaultInstance());
    }
    /**
     * <code>repeated .service2.Appointment appointments = 1;</code>
     */
    public java.util.List<Appointment.Builder>
         getAppointmentsBuilderList() {
      return getAppointmentsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        Appointment, Appointment.Builder, AppointmentOrBuilder>
        getAppointmentsFieldBuilder() {
      if (appointmentsBuilder_ == null) {
        appointmentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            Appointment, Appointment.Builder, AppointmentOrBuilder>(
                appointments_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        appointments_ = null;
      }
      return appointmentsBuilder_;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:service2.AppointmentRequest)
  }

  // @@protoc_insertion_point(class_scope:service2.AppointmentRequest)
  private static final AppointmentRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new AppointmentRequest();
  }

  public static AppointmentRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AppointmentRequest>
      PARSER = new com.google.protobuf.AbstractParser<AppointmentRequest>() {
    @Override
    public AppointmentRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<AppointmentRequest> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<AppointmentRequest> getParserForType() {
    return PARSER;
  }

  @Override
  public AppointmentRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

